<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009" width="100%">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("org.github.material.TwoLineListItem")]
	</fx:Metadata>
	
	<fx:Declarations>
		<s:DropShadowFilter id="dropShadow" quality="1" color="#000000" alpha="0.8" distance="0" blurX="{MaterialUtils.dp2px(8)}" blurY="{MaterialUtils.dp2px(8)}" strength="1" />
	</fx:Declarations>
	
	<s:transitions>
		<s:Transition fromState="up" toState="over">
			<s:Animate target="{background_color_over}" duration="80">
				<s:SimpleMotionPath property="alpha" valueTo="0.1" />
			</s:Animate>
		</s:Transition>
		
		<s:Transition fromState="*" toState="up">
			<s:Parallel duration="80">
				<s:Animate target="{background_color_over}">
					<s:SimpleMotionPath property="alpha" valueTo="0" />
				</s:Animate>
				
				<s:Animate target="{background_color_down}">
					<s:SimpleMotionPath property="alpha" valueTo="0" />
				</s:Animate>
			</s:Parallel>
		</s:Transition>
		
		<s:Transition fromState="over" toState="down">
			<s:Animate target="{background_color_down}" duration="80">
				<s:SimpleMotionPath property="alpha" valueTo="0.4" />
			</s:Animate>
		</s:Transition>
		
		<s:Transition fromState="down" toState="over">
			<s:Animate target="{background_color_down}" duration="80">
				<s:SimpleMotionPath property="alpha" valueTo="0" />
			</s:Animate>
		</s:Transition>
	</s:transitions>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			import org.github.material.MaterialUtils;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				hostComponent.labelDisplaySecondary = labelDisplaySecondary;
				hostComponent.updateText();
				
				background_color.color = MaterialUtils.strcolor2uint(getStyle("backgroundColor"));
				
				if(MaterialUtils.useWhite(background_color.color)) {
					background_color_down.color = 0xffffff;
					background_color_over.color = 0xffffff;
				}
				else {
					background_color_down.color = 0x000000;
					background_color_over.color = 0x000000;
				}

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			override protected function stateChanged(oldState:String, newState:String, recursive:Boolean):void {
				super.stateChanged(oldState, newState, recursive);
				invalidateDisplayList();
			}
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="disabled" />
		<s:State name="down" />
		<s:State name="over" />
		<s:State name="up" />
	</s:states>
	
	<!-- touch target -->
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor alpha="0" />
		</s:fill>
	</s:Rect>
	
	<!-- background -->
	<s:Rect id="background" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor id="background_color" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<!-- over -->
	<s:Rect id="over" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor id="background_color_over" alpha="0" />
		</s:fill>
	</s:Rect>
	
	<!-- text -->
	<s:VGroup left="{MaterialUtils.dp2px(16)}" right="{MaterialUtils.dp2px(16)}" top="{MaterialUtils.dp2px(20)}" bottom="{MaterialUtils.dp2px(20)}">
		
		<s:Label id="labelDisplay"
				 textAlign="left"
				 verticalAlign="top"
				 fontFamily="RobotoRegular"
				 fontSize="{MaterialUtils.dp2px(16)}" maxDisplayedLines="1" alpha="0.87"/>
		<s:Label id="labelDisplaySecondary"
				 textAlign="left"
				 verticalAlign="top"
				 fontFamily="RobotoRegular"
				 fontSize="{MaterialUtils.dp2px(14)}" alpha="0.54"/>
	</s:VGroup>
	
	<!-- down -->
	<s:Rect id="down" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor id="background_color_down" alpha="0" />
		</s:fill>
	</s:Rect>
	
</s:Skin>
